const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./index-DyQvxc8N.js","./features-animation-C9bPcVbr.js","./index-CbqanOKQ.js","./jsx-runtime-CS_Wz6c_.js","./index-Dy2Ak0OH.js","./_commonjsHelpers-Cpj98o6Y.js","./filter-props-Dg3FrsQW.js","./GlobalConfig-BfVCAYU5.js","./WillChangeMotionValue-B6OkRreS.js"])))=>i.map(i=>d[i]);
import{_ as I}from"./iframe-BglCFgpW.js";import{j as d}from"./jsx-runtime-CS_Wz6c_.js";import{c as R}from"./numbers-Ck-UmubQ.js";import{L as j,A as w,m as A}from"./index-CbqanOKQ.js";import{r as b}from"./index-Dy2Ak0OH.js";import{g as E}from"./functions-CkCEVJeD.js";import{$}from"./mergeProps-VNdaC4-V.js";import{$ as S}from"./filterDOMProps-CeZl_uWj.js";import{d as D,e as L}from"./platform-BknMeRIZ.js";import{$ as F}from"./useFocusable-aXrZ_JBU.js";import{b as M}from"./usePress-BDQnv3aP.js";import{w as N}from"./console-B9aq-5md.js";const T=()=>I(()=>import("./index-DyQvxc8N.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8]),import.meta.url).then(t=>t.default),B=t=>{const{ripples:l=[],motionProps:o,color:a="currentColor",style:n,onClear:s}=t;return d.jsx(d.Fragment,{children:l.map(e=>{const r=R(.01*e.size,.2,e.size>100?.75:.5);return d.jsx(j,{features:T,children:d.jsx(w,{mode:"popLayout",children:d.jsx(A.span,{animate:{transform:"scale(2)",opacity:0},className:"nextui-ripple",exit:{opacity:0},initial:{transform:"scale(0)",opacity:.35},style:{position:"absolute",backgroundColor:a,borderRadius:"100%",transformOrigin:"center",pointerEvents:"none",overflow:"hidden",inset:0,zIndex:0,top:e.y,left:e.x,width:`${e.size}px`,height:`${e.size}px`,...n},transition:{duration:r},onAnimationComplete:()=>{s(e.key)},...o})})},e.key)})})};B.displayName="NextUI.Ripple";function Z(t={}){const[l,o]=b.useState([]),a=b.useCallback(s=>{const e=s.target,r=Math.max(e.clientWidth,e.clientHeight);o(c=>[...c,{key:E(c.length.toString()),size:r,x:s.x-r/2,y:s.y-r/2}])},[]),n=b.useCallback(s=>{o(e=>e.filter(r=>r.key!==s))},[]);return{ripples:l,onClear:n,onPress:a,...t}}function ee(t,l){let{elementType:o="button",isDisabled:a,onPress:n,onPressStart:s,onPressEnd:e,onPressChange:r,preventFocusOnPress:c,allowFocusWhenDisabled:h,onClick:i,href:y,target:P,rel:g,type:m="button",allowTextSelectionOnPress:v}=t,p;o==="button"?p={type:m,disabled:a}:p={role:"button",tabIndex:a?void 0:0,href:o==="a"&&!a?y:void 0,target:o==="a"?P:void 0,type:o==="input"?m:void 0,disabled:o==="input"?a:void 0,"aria-disabled":!a||o==="input"?void 0:a,rel:o==="a"?g:void 0};let x=D()||L();i&&typeof i=="function"&&N("onClick is deprecated, please use onPress instead. See: https://github.com/nextui-org/nextui/issues/4292","useButton");const C=u=>{x&&(i==null||i(u)),n==null||n(u)};let{pressProps:_,isPressed:k}=M({onPressStart:s,onPressEnd:e,onPressChange:r,onPress:C,isDisabled:a,preventFocusOnPress:c,allowTextSelectionOnPress:v,ref:l}),{focusableProps:f}=F(t,l);h&&(f.tabIndex=a?-1:f.tabIndex);let z=$(f,_,S(t,{labelable:!0}));return{isPressed:k,buttonProps:$(p,z,{"aria-haspopup":t["aria-haspopup"],"aria-expanded":t["aria-expanded"],"aria-controls":t["aria-controls"],"aria-pressed":t["aria-pressed"],onClick:u=>{m==="button"&&x||i==null||i(u)}})}}export{B as R,ee as a,Z as u};
