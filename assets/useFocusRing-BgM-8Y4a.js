import{d as p,$,e as x,f as g,c as h}from"./useFocusWithin-Dv5DP61h.js";import{r as o}from"./index-Dy2Ak0OH.js";function C(f){let{isDisabled:i,onFocus:c,onBlur:t,onFocusChange:e}=f;const a=o.useCallback(s=>{if(s.target===s.currentTarget)return t&&t(s),e&&e(!1),!0},[t,e]),r=p(a),l=o.useCallback(s=>{const u=$(s.target);s.target===s.currentTarget&&u.activeElement===s.target&&(c&&c(s),e&&e(!0),r(s))},[e,c,r]);return{focusProps:{onFocus:!i&&(c||e||t)?l:void 0,onBlur:!i&&(t||e)?a:void 0}}}function m(f={}){let{autoFocus:i=!1,isTextInput:c,within:t}=f,e=o.useRef({isFocused:!1,isFocusVisible:i||x()}),[a,r]=o.useState(!1),[l,s]=o.useState(()=>e.current.isFocused&&e.current.isFocusVisible),u=o.useCallback(()=>s(e.current.isFocused&&e.current.isFocusVisible),[]),d=o.useCallback(n=>{e.current.isFocused=n,r(n),u()},[u]);g(n=>{e.current.isFocusVisible=n,u()},[],{isTextInput:c});let{focusProps:b}=C({isDisabled:t,onFocusChange:d}),{focusWithinProps:F}=h({isDisabled:!t,onFocusWithinChange:d});return{isFocused:a,isFocusVisible:l,focusProps:t?F:b}}export{C as $,m as a};
